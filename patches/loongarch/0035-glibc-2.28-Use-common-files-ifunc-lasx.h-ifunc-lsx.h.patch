From ffedc73d6ec3650bc8c8c5b732e7b5b77ab19944 Mon Sep 17 00:00:00 2001
From: caiyinyu <caiyinyu@loongson.cn>
Date: Fri, 24 Feb 2023 16:38:05 +0800
Subject: [PATCH 35/44] glibc-2.28: Use common files: ifunc-lasx.h ifunc-lsx.h
 ...

Change-Id: If6513e0078c6b83413649dc5441fcb9ccd469961
---
 .../{ifunc-memcpy.h => ifunc-lasx.h}          |  0
 .../multiarch/{ifunc-strchr.h => ifunc-lsx.h} |  0
 .../loongarch/lp64/multiarch/ifunc-memcmp.h   | 34 ----------------
 .../loongarch/lp64/multiarch/ifunc-memmove.h  | 37 -----------------
 .../loongarch/lp64/multiarch/ifunc-memset.h   | 40 -------------------
 .../lp64/multiarch/ifunc-rawmemchr.h          | 34 ----------------
 .../loongarch/lp64/multiarch/ifunc-strrchr.h  | 34 ----------------
 sysdeps/loongarch/lp64/multiarch/memcmp.c     |  2 +-
 sysdeps/loongarch/lp64/multiarch/memcpy.c     |  2 +-
 sysdeps/loongarch/lp64/multiarch/memmove.c    |  2 +-
 sysdeps/loongarch/lp64/multiarch/memset.c     |  2 +-
 sysdeps/loongarch/lp64/multiarch/rawmemchr.c  |  2 +-
 sysdeps/loongarch/lp64/multiarch/stpcpy.c     |  2 +-
 sysdeps/loongarch/lp64/multiarch/strchr.c     |  2 +-
 sysdeps/loongarch/lp64/multiarch/strchrnul.c  |  2 +-
 sysdeps/loongarch/lp64/multiarch/strcmp.c     |  2 +-
 sysdeps/loongarch/lp64/multiarch/strcpy.c     |  2 +-
 sysdeps/loongarch/lp64/multiarch/strlen.c     |  2 +-
 sysdeps/loongarch/lp64/multiarch/strncmp.c    |  2 +-
 sysdeps/loongarch/lp64/multiarch/strnlen.c    |  2 +-
 sysdeps/loongarch/lp64/multiarch/strrchr.c    |  2 +-
 21 files changed, 14 insertions(+), 193 deletions(-)
 rename sysdeps/loongarch/lp64/multiarch/{ifunc-memcpy.h => ifunc-lasx.h} (100%)
 rename sysdeps/loongarch/lp64/multiarch/{ifunc-strchr.h => ifunc-lsx.h} (100%)
 delete mode 100644 sysdeps/loongarch/lp64/multiarch/ifunc-memcmp.h
 delete mode 100644 sysdeps/loongarch/lp64/multiarch/ifunc-memmove.h
 delete mode 100644 sysdeps/loongarch/lp64/multiarch/ifunc-memset.h
 delete mode 100644 sysdeps/loongarch/lp64/multiarch/ifunc-rawmemchr.h
 delete mode 100644 sysdeps/loongarch/lp64/multiarch/ifunc-strrchr.h

diff --git a/sysdeps/loongarch/lp64/multiarch/ifunc-memcpy.h b/sysdeps/loongarch/lp64/multiarch/ifunc-lasx.h
similarity index 100%
rename from sysdeps/loongarch/lp64/multiarch/ifunc-memcpy.h
rename to sysdeps/loongarch/lp64/multiarch/ifunc-lasx.h
diff --git a/sysdeps/loongarch/lp64/multiarch/ifunc-strchr.h b/sysdeps/loongarch/lp64/multiarch/ifunc-lsx.h
similarity index 100%
rename from sysdeps/loongarch/lp64/multiarch/ifunc-strchr.h
rename to sysdeps/loongarch/lp64/multiarch/ifunc-lsx.h
diff --git a/sysdeps/loongarch/lp64/multiarch/ifunc-memcmp.h b/sysdeps/loongarch/lp64/multiarch/ifunc-memcmp.h
deleted file mode 100644
index c1bb9bc5d9..0000000000
--- a/sysdeps/loongarch/lp64/multiarch/ifunc-memcmp.h
+++ /dev/null
@@ -1,34 +0,0 @@
-/* Common definition for memcmp implementation.
-   All versions must be listed in ifunc-impl-list.c.
-   Copyright (C) 2017-2022 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <https://www.gnu.org/licenses/>.  */
-
-#include <init-arch.h>
-
-extern __typeof (REDIRECT_NAME) OPTIMIZE (lsx) attribute_hidden;
-extern __typeof (REDIRECT_NAME) OPTIMIZE (aligned) attribute_hidden;
-
-static inline void *
-IFUNC_SELECTOR (void)
-{
-  INIT_ARCH();
-
-  if (SUPPORT_LSX)
-    return OPTIMIZE (lsx);
-  else
-    return OPTIMIZE (aligned);
-}
diff --git a/sysdeps/loongarch/lp64/multiarch/ifunc-memmove.h b/sysdeps/loongarch/lp64/multiarch/ifunc-memmove.h
deleted file mode 100644
index c5e4d8b604..0000000000
--- a/sysdeps/loongarch/lp64/multiarch/ifunc-memmove.h
+++ /dev/null
@@ -1,37 +0,0 @@
-/* Common definition for memmove implementation.
-   All versions must be listed in ifunc-impl-list.c.
-   Copyright (C) 2017-2022 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <https://www.gnu.org/licenses/>.  */
-
-#include <init-arch.h>
-
-extern __typeof (REDIRECT_NAME) OPTIMIZE (lsx) attribute_hidden;
-extern __typeof (REDIRECT_NAME) OPTIMIZE (aligned) attribute_hidden;
-extern __typeof (REDIRECT_NAME) OPTIMIZE (unaligned) attribute_hidden;
-
-static inline void *
-IFUNC_SELECTOR (void)
-{
-  INIT_ARCH();
-
-  if (SUPPORT_LSX)
-    return OPTIMIZE (lsx);
-  if (SUPPORT_UAL)
-    return OPTIMIZE (unaligned);
-  else
-    return OPTIMIZE (aligned);
-}
diff --git a/sysdeps/loongarch/lp64/multiarch/ifunc-memset.h b/sysdeps/loongarch/lp64/multiarch/ifunc-memset.h
deleted file mode 100644
index 09f0eb0e2e..0000000000
--- a/sysdeps/loongarch/lp64/multiarch/ifunc-memset.h
+++ /dev/null
@@ -1,40 +0,0 @@
-/* Common definition for memcpy, and memset implementation.
-   All versions must be listed in ifunc-impl-list.c.
-   Copyright (C) 2017-2022 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <https://www.gnu.org/licenses/>.  */
-
-#include <init-arch.h>
-
-extern __typeof (REDIRECT_NAME) OPTIMIZE (lasx) attribute_hidden;
-extern __typeof (REDIRECT_NAME) OPTIMIZE (lsx) attribute_hidden;
-extern __typeof (REDIRECT_NAME) OPTIMIZE (unaligned) attribute_hidden;
-extern __typeof (REDIRECT_NAME) OPTIMIZE (aligned) attribute_hidden;
-
-static inline void *
-IFUNC_SELECTOR (void)
-{
-  INIT_ARCH();
-
-  if (SUPPORT_LASX)
-    return OPTIMIZE (lasx);
-  if (SUPPORT_LSX)
-    return OPTIMIZE (lsx);
-  else if (SUPPORT_UAL)
-    return OPTIMIZE (unaligned);
-  else
-    return OPTIMIZE (aligned);
-}
diff --git a/sysdeps/loongarch/lp64/multiarch/ifunc-rawmemchr.h b/sysdeps/loongarch/lp64/multiarch/ifunc-rawmemchr.h
deleted file mode 100644
index 9093f08c8e..0000000000
--- a/sysdeps/loongarch/lp64/multiarch/ifunc-rawmemchr.h
+++ /dev/null
@@ -1,34 +0,0 @@
-/* Common definition for memchr implementation.
-   All versions must be listed in ifunc-impl-list.c.
-   Copyright (C) 2017-2022 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <https://www.gnu.org/licenses/>.  */
-
-#include <init-arch.h>
-
-extern __typeof (REDIRECT_NAME) OPTIMIZE (lsx) attribute_hidden;
-extern __typeof (REDIRECT_NAME) OPTIMIZE (aligned) attribute_hidden;
-
-static inline void *
-IFUNC_SELECTOR (void)
-{
-  INIT_ARCH();
-
-  if (SUPPORT_LSX)
-    return OPTIMIZE (lsx);
-  else
-    return OPTIMIZE (aligned);
-}
diff --git a/sysdeps/loongarch/lp64/multiarch/ifunc-strrchr.h b/sysdeps/loongarch/lp64/multiarch/ifunc-strrchr.h
deleted file mode 100644
index 74cdb22aeb..0000000000
--- a/sysdeps/loongarch/lp64/multiarch/ifunc-strrchr.h
+++ /dev/null
@@ -1,34 +0,0 @@
-/* Common definition for strrchr implementation.
-   All versions must be listed in ifunc-impl-list.c.
-   Copyright (C) 2017-2022 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <https://www.gnu.org/licenses/>.  */
-
-#include <init-arch.h>
-
-extern __typeof (REDIRECT_NAME) OPTIMIZE (lsx) attribute_hidden;
-extern __typeof (REDIRECT_NAME) OPTIMIZE (aligned) attribute_hidden;
-
-static inline void *
-IFUNC_SELECTOR (void)
-{
-  INIT_ARCH();
-
-  if (SUPPORT_LSX)
-    return OPTIMIZE (lsx);
-  else
-    return OPTIMIZE (aligned);
-}
diff --git a/sysdeps/loongarch/lp64/multiarch/memcmp.c b/sysdeps/loongarch/lp64/multiarch/memcmp.c
index 5efdf26504..1987790c81 100644
--- a/sysdeps/loongarch/lp64/multiarch/memcmp.c
+++ b/sysdeps/loongarch/lp64/multiarch/memcmp.c
@@ -24,7 +24,7 @@
 # undef memcmp
 
 # define SYMBOL_NAME memcmp
-# include "ifunc-memcmp.h"
+# include "ifunc-memchr.h"
 
 libc_ifunc_redirected (__redirect_memcmp, __new_memcmp,
 		       IFUNC_SELECTOR ());
diff --git a/sysdeps/loongarch/lp64/multiarch/memcpy.c b/sysdeps/loongarch/lp64/multiarch/memcpy.c
index c66858301d..0ba8254aa8 100644
--- a/sysdeps/loongarch/lp64/multiarch/memcpy.c
+++ b/sysdeps/loongarch/lp64/multiarch/memcpy.c
@@ -24,7 +24,7 @@
 # undef memcpy
 
 # define SYMBOL_NAME memcpy
-# include "ifunc-memcpy.h"
+# include "ifunc-lasx.h"
 
 libc_ifunc_redirected (__redirect_memcpy, __new_memcpy,
 		       IFUNC_SELECTOR ());
diff --git a/sysdeps/loongarch/lp64/multiarch/memmove.c b/sysdeps/loongarch/lp64/multiarch/memmove.c
index a877640465..45c284ee2d 100644
--- a/sysdeps/loongarch/lp64/multiarch/memmove.c
+++ b/sysdeps/loongarch/lp64/multiarch/memmove.c
@@ -24,7 +24,7 @@
 # undef memmove
 
 # define SYMBOL_NAME memmove
-# include "ifunc-memmove.h"
+# include "ifunc-lsx.h"
 
 libc_ifunc_redirected (__redirect_memmove, __new_memmove,
 		       IFUNC_SELECTOR ());
diff --git a/sysdeps/loongarch/lp64/multiarch/memset.c b/sysdeps/loongarch/lp64/multiarch/memset.c
index fc928fab3b..fb316be5ed 100644
--- a/sysdeps/loongarch/lp64/multiarch/memset.c
+++ b/sysdeps/loongarch/lp64/multiarch/memset.c
@@ -24,7 +24,7 @@
 # undef memset
 
 # define SYMBOL_NAME memset
-# include "ifunc-memset.h"
+# include "ifunc-lasx.h"
 
 libc_ifunc_redirected (__redirect_memset, __new_memset,
 		       IFUNC_SELECTOR ());
diff --git a/sysdeps/loongarch/lp64/multiarch/rawmemchr.c b/sysdeps/loongarch/lp64/multiarch/rawmemchr.c
index aae08ad53a..1e514139e2 100644
--- a/sysdeps/loongarch/lp64/multiarch/rawmemchr.c
+++ b/sysdeps/loongarch/lp64/multiarch/rawmemchr.c
@@ -25,7 +25,7 @@
 # undef __rawmemchr
 
 # define SYMBOL_NAME rawmemchr
-# include "ifunc-rawmemchr.h"
+# include "ifunc-memchr.h"
 
 libc_ifunc_redirected (__redirect_rawmemchr, __rawmemchr,
                        IFUNC_SELECTOR ());
diff --git a/sysdeps/loongarch/lp64/multiarch/stpcpy.c b/sysdeps/loongarch/lp64/multiarch/stpcpy.c
index be9f09979e..96a417ae25 100644
--- a/sysdeps/loongarch/lp64/multiarch/stpcpy.c
+++ b/sysdeps/loongarch/lp64/multiarch/stpcpy.c
@@ -28,7 +28,7 @@
 # undef __stpcpy
 
 # define SYMBOL_NAME stpcpy
-# include "ifunc-strrchr.h"
+# include "ifunc-memchr.h"
 
 libc_ifunc_redirected (__redirect_stpcpy, __stpcpy, IFUNC_SELECTOR ());
 
diff --git a/sysdeps/loongarch/lp64/multiarch/strchr.c b/sysdeps/loongarch/lp64/multiarch/strchr.c
index cdaa1904b7..7810df5a9e 100644
--- a/sysdeps/loongarch/lp64/multiarch/strchr.c
+++ b/sysdeps/loongarch/lp64/multiarch/strchr.c
@@ -24,7 +24,7 @@
 # undef strchr
 
 # define SYMBOL_NAME strchr
-# include "ifunc-strchr.h"
+# include "ifunc-lsx.h"
 
 libc_ifunc_redirected (__redirect_strchr, __new_strchr,
 		       IFUNC_SELECTOR ());
diff --git a/sysdeps/loongarch/lp64/multiarch/strchrnul.c b/sysdeps/loongarch/lp64/multiarch/strchrnul.c
index 78852b0adf..bd7b65afb0 100644
--- a/sysdeps/loongarch/lp64/multiarch/strchrnul.c
+++ b/sysdeps/loongarch/lp64/multiarch/strchrnul.c
@@ -26,7 +26,7 @@
 # undef strchrnul
 
 # define SYMBOL_NAME strchrnul
-# include "ifunc-strchr.h"
+# include "ifunc-lsx.h"
 
 libc_ifunc_redirected (__redirect_strchrnul, __strchrnul,
                        IFUNC_SELECTOR ());
diff --git a/sysdeps/loongarch/lp64/multiarch/strcmp.c b/sysdeps/loongarch/lp64/multiarch/strcmp.c
index 5a972823c5..0b20e6f0dc 100644
--- a/sysdeps/loongarch/lp64/multiarch/strcmp.c
+++ b/sysdeps/loongarch/lp64/multiarch/strcmp.c
@@ -24,7 +24,7 @@
 # undef strcmp
 
 # define SYMBOL_NAME strcmp
-#include <ifunc-strchr.h>
+#include <ifunc-lsx.h>
 
 libc_ifunc_redirected (__redirect_strcmp, strcmp, IFUNC_SELECTOR ());
 
diff --git a/sysdeps/loongarch/lp64/multiarch/strcpy.c b/sysdeps/loongarch/lp64/multiarch/strcpy.c
index 779cd6b6f6..48fecf6617 100644
--- a/sysdeps/loongarch/lp64/multiarch/strcpy.c
+++ b/sysdeps/loongarch/lp64/multiarch/strcpy.c
@@ -24,7 +24,7 @@
 # undef strcpy
 
 # define SYMBOL_NAME strcpy
-# include "ifunc-strchr.h"
+# include "ifunc-lsx.h"
 
 libc_ifunc_redirected (__redirect_strcpy, strcpy, IFUNC_SELECTOR ());
 
diff --git a/sysdeps/loongarch/lp64/multiarch/strlen.c b/sysdeps/loongarch/lp64/multiarch/strlen.c
index aee6541299..e08f32f29f 100644
--- a/sysdeps/loongarch/lp64/multiarch/strlen.c
+++ b/sysdeps/loongarch/lp64/multiarch/strlen.c
@@ -24,7 +24,7 @@
 # undef strlen
 
 # define SYMBOL_NAME strlen
-# include "ifunc-strchr.h"
+# include "ifunc-lsx.h"
 
 libc_ifunc_redirected (__redirect_strlen, __new_strlen,
 		       IFUNC_SELECTOR ());
diff --git a/sysdeps/loongarch/lp64/multiarch/strncmp.c b/sysdeps/loongarch/lp64/multiarch/strncmp.c
index dcbdbbf20e..80ab8c8c38 100644
--- a/sysdeps/loongarch/lp64/multiarch/strncmp.c
+++ b/sysdeps/loongarch/lp64/multiarch/strncmp.c
@@ -24,7 +24,7 @@
 # undef strncmp
 
 # define SYMBOL_NAME strncmp
-# include "ifunc-strchr.h"
+# include "ifunc-lsx.h"
 
 libc_ifunc_redirected (__redirect_strncmp, strncmp, IFUNC_SELECTOR ());
 
diff --git a/sysdeps/loongarch/lp64/multiarch/strnlen.c b/sysdeps/loongarch/lp64/multiarch/strnlen.c
index ab75e91bfd..4436bd41ed 100644
--- a/sysdeps/loongarch/lp64/multiarch/strnlen.c
+++ b/sysdeps/loongarch/lp64/multiarch/strnlen.c
@@ -26,7 +26,7 @@
 # undef strnlen
 
 # define SYMBOL_NAME strnlen
-# include "ifunc-strchr.h"
+# include "ifunc-lsx.h"
 
 libc_ifunc_redirected (__redirect_strnlen, __strnlen, IFUNC_SELECTOR ());
 weak_alias (__strnlen, strnlen);
diff --git a/sysdeps/loongarch/lp64/multiarch/strrchr.c b/sysdeps/loongarch/lp64/multiarch/strrchr.c
index 8809ca2c0c..4f1b0ec049 100644
--- a/sysdeps/loongarch/lp64/multiarch/strrchr.c
+++ b/sysdeps/loongarch/lp64/multiarch/strrchr.c
@@ -24,7 +24,7 @@
 # undef strrchr
 
 # define SYMBOL_NAME strrchr
-# include "ifunc-strrchr.h"
+# include "ifunc-memchr.h"
 
 libc_ifunc_redirected (__redirect_strrchr, __new_strrchr,
 		       IFUNC_SELECTOR ());
-- 
2.20.1

