From b01003b172fdb9d2716df8ae5fe4b4584a7ab338 Mon Sep 17 00:00:00 2001
From: Xiaolin Tang <tangxiaolin@loongson.cn>
Date: Wed, 14 Dec 2022 11:45:06 +0800
Subject: [PATCH 09/44] LoongArch: Hard Float Support for functions fmax{f/ },
 fmin{f/ }.

Use hardware Floating-point instruction fmax.{s/d}, fmin.{s/d} to
implement functions fmax{f/ }, fmin{f/ }.

Change-Id: I8501d5727c9986de7f527eafa4ecceecc605f972
---
 sysdeps/loongarch/fpu/s_fmax.c  | 30 ++++++++++++++++++++++++++++++
 sysdeps/loongarch/fpu/s_fmaxf.c | 30 ++++++++++++++++++++++++++++++
 sysdeps/loongarch/fpu/s_fmin.c  | 30 ++++++++++++++++++++++++++++++
 sysdeps/loongarch/fpu/s_fminf.c | 30 ++++++++++++++++++++++++++++++
 4 files changed, 120 insertions(+)
 create mode 100644 sysdeps/loongarch/fpu/s_fmax.c
 create mode 100644 sysdeps/loongarch/fpu/s_fmaxf.c
 create mode 100644 sysdeps/loongarch/fpu/s_fmin.c
 create mode 100644 sysdeps/loongarch/fpu/s_fminf.c

diff --git a/sysdeps/loongarch/fpu/s_fmax.c b/sysdeps/loongarch/fpu/s_fmax.c
new file mode 100644
index 0000000000..fe7265aff4
--- /dev/null
+++ b/sysdeps/loongarch/fpu/s_fmax.c
@@ -0,0 +1,30 @@
+/* fmax().  LoongArch version.
+   Copyright (C) 2021-2022 Free Software Foundation, Inc.
+
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define NO_MATH_REDIRECT
+#include <math.h>
+#include <libm-alias-double.h>
+
+double
+__fmax (double x, double y)
+{
+  asm volatile("fmax.d\t%0,%1,%2" : "=f" (x) : "f" (x), "f" (y));
+  return x;
+}
+libm_alias_double (__fmax, fmax)
diff --git a/sysdeps/loongarch/fpu/s_fmaxf.c b/sysdeps/loongarch/fpu/s_fmaxf.c
new file mode 100644
index 0000000000..3defa7de66
--- /dev/null
+++ b/sysdeps/loongarch/fpu/s_fmaxf.c
@@ -0,0 +1,30 @@
+/* fmaxf().  LoongArch version.
+   Copyright (C) 2021-2022 Free Software Foundation, Inc.
+
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define NO_MATH_REDIRECT
+#include <math.h>
+#include <libm-alias-float.h>
+
+float
+__fmaxf (float x, float y)
+{
+  asm volatile("fmax.s\t%0,%1,%2" : "=f" (x) : "f" (x), "f" (y));
+  return x;
+}
+libm_alias_float (__fmax, fmax)
diff --git a/sysdeps/loongarch/fpu/s_fmin.c b/sysdeps/loongarch/fpu/s_fmin.c
new file mode 100644
index 0000000000..cc9d0cd1ff
--- /dev/null
+++ b/sysdeps/loongarch/fpu/s_fmin.c
@@ -0,0 +1,30 @@
+/* fmin().  LoongArch version.
+   Copyright (C) 2021-2022 Free Software Foundation, Inc.
+
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define NO_MATH_REDIRECT
+#include <math.h>
+#include <libm-alias-double.h>
+
+double
+__fmin (double x, double y)
+{
+  asm volatile("fmin.d\t%0,%1,%2" : "=f" (x) : "f" (x), "f" (y));
+  return x;
+}
+libm_alias_double (__fmin, fmin)
diff --git a/sysdeps/loongarch/fpu/s_fminf.c b/sysdeps/loongarch/fpu/s_fminf.c
new file mode 100644
index 0000000000..40efbd7139
--- /dev/null
+++ b/sysdeps/loongarch/fpu/s_fminf.c
@@ -0,0 +1,30 @@
+/* fminf().  LoongArch version.
+   Copyright (C) 2021-2022 Free Software Foundation, Inc.
+
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define NO_MATH_REDIRECT
+#include <math.h>
+#include <libm-alias-float.h>
+
+float
+__fminf (float x, float y)
+{
+  asm volatile("fmin.s\t%0,%1,%2" : "=f" (x) : "f" (x), "f" (y));
+  return x;
+}
+libm_alias_float (__fmin, fmin)
-- 
2.20.1

